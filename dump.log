INFO:0.0 ns:Stack.Host(client_host):num pending: 1
INFO:0.0 ns:Stack.Host(server_host):num pending: 1
DEBUG:100000.0 ns:Stack.Handler(server_handler):received new msg from host: b'\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00'
DEBUG:100000.0 ns:Stack.Handler(server_handler):registered app with ID 0
DEBUG:100000.0 ns:Stack.Handler(client_handler):received new msg from host: b'\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x00\x00'
DEBUG:100000.0 ns:Stack.Handler(client_handler):registered app with ID 0
DEBUG:100000.0 ns:Stack.Host(server_host):got app id from qnos: 0
INFO:100000.0 ns:Stack.QnosConnection(server_program):Flushing presubroutine:
PreSubroutine (netqasm_version=(0, 0), app_id=0):
 LN | HLN | CMD
   0    () array 10 @0
   1    () array 1 @1
   2    () store 0 @1[0]
   3    () array 10 @2
   4    () array 1 @3
   5    () store 0 @3[0]
   6    () recv_epr(0,0) 1 0
   7    () wait_all @0[0:10]
   8    () set Q0 1
   9    () qalloc Q0
  10    () init Q0
  11    () set Q0 0
  12    () set Q1 1
  13    () mov Q0 Q1
  14    () set Q0 0
  15    () qfree Q0
  16    () recv_epr(0,0) 3 2
  17    () wait_all @2[0:10]
  18    () breakpoint 2 0
  19    () set Q0 0
  20    () set Q1 1
  21    () cphase Q0 Q1
  22    () ret_arr @0
  23    () ret_arr @1
  24    () ret_arr @2
  25    () ret_arr @3

INFO:100000.0 ns:Stack.QnosConnection(server_program):Flushing compiled subroutine:
Subroutine (netqasm_version=(0, 0), app_id=0):
 LN | HLN | CMD
   0    () set R0 10
   1    () array R0 @0
   2    () set R0 1
   3    () array R0 @1
   4    () set R0 0
   5    () set R1 0
   6    () store R0 @1[R1]
   7    () set R0 10
   8    () array R0 @2
   9    () set R0 1
  10    () array R0 @3
  11    () set R0 0
  12    () set R1 0
  13    () store R0 @3[R1]
  14    () set R0 0
  15    () set R1 0
  16    () set R2 1
  17    () set R3 0
  18    () recv_epr R0 R1 R2 R3
  19    () set R0 0
  20    () set R1 10
  21    () wait_all @0[R0:R1]
  22    () set Q0 1
  23    () qalloc Q0
  24    () init Q0
  25    () set Q0 0
  26    () set Q1 1
  27    () rot_y Q0 8 4
  28    () crot_y Q0 Q1 24 4
  29    () rot_x Q0 24 4
  30    () crot_x Q0 Q1 8 4
  31    () set Q0 0
  32    () qfree Q0
  33    () set R0 0
  34    () set R1 0
  35    () set R2 3
  36    () set R3 2
  37    () recv_epr R0 R1 R2 R3
  38    () set R0 0
  39    () set R1 10
  40    () wait_all @2[R0:R1]
  41    () breakpoint 2 0
  42    () set Q0 0
  43    () set Q1 1
  44    () rot_y Q1 8 4
  45    () crot_x Q0 Q1 8 4
  46    () rot_z Q0 24 4
  47    () rot_x Q1 24 4
  48    () rot_y Q1 24 4
  49    () ret_arr @0
  50    () ret_arr @1
  51    () ret_arr @2
  52    () ret_arr @3

DEBUG:100000.0 ns:Stack.QnosConnection(server_program):Committing message <netqasm.backend.messages.SubroutineMessage object at 0x7fc091b13c10>
DEBUG:100000.0 ns:Stack.Host(client_host):got app id from qnos: 0
INFO:100000.0 ns:Stack.QnosConnection(client_program):Flushing presubroutine:
PreSubroutine (netqasm_version=(0, 0), app_id=0):
 LN | HLN | CMD
   0    () array 10 @0
   1    () array 1 @1
   2    () store 0 @1[0]
   3    () array 20 @2
   4    () store 0 @2[0]
   5    () store 1 @2[1]
   6    () array 10 @3
   7    () array 1 @4
   8    () store 0 @4[0]
   9    () array 20 @5
  10    () store 0 @5[0]
  11    () store 1 @5[1]
  12    () create_epr(1,0) 1 2 0
  13    () wait_all @0[0:10]
  14    () set Q0 0
  15    () h Q0
  16    () set Q0 0
  17    () meas Q0 M0
  18    () qfree Q0
  19    () create_epr(1,0) 4 5 3
  20    () wait_all @3[0:10]
  21    () set Q0 0
  22    () meas Q0 M1
  23    () qfree Q0
  24    () breakpoint 2 1
  25    () ret_arr @0
  26    () ret_arr @1
  27    () ret_arr @2
  28    () ret_arr @3
  29    () ret_arr @4
  30    () ret_arr @5
  31    () ret_reg M0
  32    () ret_reg M1

INFO:100000.0 ns:Stack.QnosConnection(client_program):Flushing compiled subroutine:
Subroutine (netqasm_version=(0, 0), app_id=0):
 LN | HLN | CMD
   0    () set R0 10
   1    () array R0 @0
   2    () set R0 1
   3    () array R0 @1
   4    () set R0 0
   5    () set R1 0
   6    () store R0 @1[R1]
   7    () set R0 20
   8    () array R0 @2
   9    () set R0 0
  10    () set R1 0
  11    () store R0 @2[R1]
  12    () set R0 1
  13    () set R1 1
  14    () store R0 @2[R1]
  15    () set R0 10
  16    () array R0 @3
  17    () set R0 1
  18    () array R0 @4
  19    () set R0 0
  20    () set R1 0
  21    () store R0 @4[R1]
  22    () set R0 20
  23    () array R0 @5
  24    () set R0 0
  25    () set R1 0
  26    () store R0 @5[R1]
  27    () set R0 1
  28    () set R1 1
  29    () store R0 @5[R1]
  30    () set R0 1
  31    () set R1 0
  32    () set R2 1
  33    () set R3 2
  34    () set R4 0
  35    () create_epr R0 R1 R2 R3 R4
  36    () set R0 0
  37    () set R1 10
  38    () wait_all @0[R0:R1]
  39    () set Q0 0
  40    () rot_y Q0 8 4
  41    () rot_x Q0 16 4
  42    () set Q0 0
  43    () meas Q0 M0
  44    () qfree Q0
  45    () set R0 1
  46    () set R1 0
  47    () set R2 4
  48    () set R3 5
  49    () set R4 3
  50    () create_epr R0 R1 R2 R3 R4
  51    () set R0 0
  52    () set R1 10
  53    () wait_all @3[R0:R1]
  54    () set Q0 0
  55    () meas Q0 M1
  56    () qfree Q0
  57    () breakpoint 2 1
  58    () ret_arr @0
  59    () ret_arr @1
  60    () ret_arr @2
  61    () ret_arr @3
  62    () ret_arr @4
  63    () ret_arr @5
  64    () ret_reg M0
  65    () ret_reg M1

DEBUG:100000.0 ns:Stack.QnosConnection(client_program):Committing message <netqasm.backend.messages.SubroutineMessage object at 0x7fc091ac4f70>
DEBUG:200000.0 ns:Stack.Handler(client_handler):received new msg from host: b'\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00'
DEBUG:200000.0 ns:Stack.Handler(client_handler):Opening EPR socket (0, 1)
DEBUG:200000.0 ns:Stack.Handler(server_handler):received new msg from host: b'\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00d\x00\x00\x00'
DEBUG:200000.0 ns:Stack.Handler(server_handler):Opening EPR socket (0, 0)
DEBUG:300000.0 ns:Stack.Handler(server_handler):received new msg from host: b'\x02\x00\x00\x00\x00\x04\x00\n\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x04\x00\x01\x00\x00\x00\x00\x03\x00\x01\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x04\x04\x00\x00\x00\x00\x00\x05\x00\x01\x00\x00\x00\x04\x04\x00\n\x00\x00\x00\x00\x03\x00\x02\x00\x00\x00\x00\x04\x00\x01\x00\x00\x00\x00\x03\x00\x03\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x04\x04\x00\x00\x00\x00\x00\x05\x00\x03\x00\x00\x00\x04\x04\x00\x00\x00\x00\x00\x00\x04\x04\x00\x00\x00\x00\x00\x04\x08\x01\x00\x00\x00\x00\x04\x0c\x00\x00\x00\x00\x00"\x00\x04\x08\x0c\x00\x00\x04\x00\x00\x00\x00\x00\x00\x04\x04\n\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x04\x04\x02\x01\x00\x00\x00\x00\x01\x02\x00\x00\x00\x00\x00\x02\x02\x00\x00\x00\x00\x00\x04\x02\x00\x00\x00\x00\x00\x04\x06\x01\x00\x00\x00\x00\x1c\x02\x08\x04\x00\x00\x00\x1f\x02\x06\x18\x04\x00\x00\x1b\x02\x18\x04\x00\x00\x00\x1e\x02\x06\x08\x04\x00\x00\x04\x02\x00\x00\x00\x00\x00&\x02\x00\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x04\x04\x00\x00\x00\x00\x00\x04\x08\x03\x00\x00\x00\x00\x04\x0c\x02\x00\x00\x00\x00"\x00\x04\x08\x0c\x00\x00\x04\x00\x00\x00\x00\x00\x00\x04\x04\n\x00\x00\x00\x00#\x02\x00\x00\x00\x00\x04d\x02\x00\x00\x00\x00\x00\x04\x02\x00\x00\x00\x00\x00\x04\x06\x01\x00\x00\x00\x00\x1c\x06\x08\x04\x00\x00\x00\x1e\x02\x06\x08\x04\x00\x00\x1d\x02\x18\x04\x00\x00\x00\x1b\x06\x18\x04\x00\x00\x00\x1c\x06\x18\x04\x00\x00\x00(\x00\x00\x00\x00\x00\x00(\x01\x00\x00\x00\x00\x00(\x02\x00\x00\x00\x00\x00(\x03\x00\x00\x00\x00\x00'
DEBUG:300000.0 ns:Stack.Handler(client_handler):received new msg from host: b"\x02\x00\x00\x00\x00\x04\x00\n\x00\x00\x00\x00\x03\x00\x00\x00\x00\x00\x00\x04\x00\x01\x00\x00\x00\x00\x03\x00\x01\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x04\x04\x00\x00\x00\x00\x00\x05\x00\x01\x00\x00\x00\x04\x04\x00\x14\x00\x00\x00\x00\x03\x00\x02\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x04\x04\x00\x00\x00\x00\x00\x05\x00\x02\x00\x00\x00\x04\x04\x00\x01\x00\x00\x00\x00\x04\x04\x01\x00\x00\x00\x00\x05\x00\x02\x00\x00\x00\x04\x04\x00\n\x00\x00\x00\x00\x03\x00\x03\x00\x00\x00\x00\x04\x00\x01\x00\x00\x00\x00\x03\x00\x04\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x04\x04\x00\x00\x00\x00\x00\x05\x00\x04\x00\x00\x00\x04\x04\x00\x14\x00\x00\x00\x00\x03\x00\x05\x00\x00\x00\x00\x04\x00\x00\x00\x00\x00\x00\x04\x04\x00\x00\x00\x00\x00\x05\x00\x05\x00\x00\x00\x04\x04\x00\x01\x00\x00\x00\x00\x04\x04\x01\x00\x00\x00\x00\x05\x00\x05\x00\x00\x00\x04\x04\x00\x01\x00\x00\x00\x00\x04\x04\x00\x00\x00\x00\x00\x04\x08\x01\x00\x00\x00\x00\x04\x0c\x02\x00\x00\x00\x00\x04\x10\x00\x00\x00\x00\x00!\x00\x04\x08\x0c\x10\x00\x04\x00\x00\x00\x00\x00\x00\x04\x04\n\x00\x00\x00\x00#\x00\x00\x00\x00\x00\x04\x04\x02\x00\x00\x00\x00\x00\x1c\x02\x08\x04\x00\x00\x00\x1b\x02\x10\x04\x00\x00\x00\x04\x02\x00\x00\x00\x00\x00 \x02\x03\x00\x00\x00\x00&\x02\x00\x00\x00\x00\x00\x04\x00\x01\x00\x00\x00\x00\x04\x04\x00\x00\x00\x00\x00\x04\x08\x04\x00\x00\x00\x00\x04\x0c\x05\x00\x00\x00\x00\x04\x10\x03\x00\x00\x00\x00!\x00\x04\x08\x0c\x10\x00\x04\x00\x00\x00\x00\x00\x00\x04\x04\n\x00\x00\x00\x00#\x03\x00\x00\x00\x00\x04\x04\x02\x00\x00\x00\x00\x00 \x02\x07\x00\x00\x00\x00&\x02\x00\x00\x00\x00\x00d\x02\x01\x00\x00\x00\x00(\x00\x00\x00\x00\x00\x00(\x01\x00\x00\x00\x00\x00(\x02\x00\x00\x00\x00\x00(\x03\x00\x00\x00\x00\x00(\x04\x00\x00\x00\x00\x00(\x05\x00\x00\x00\x00\x00'\x03\x00\x00\x00\x00\x00'\x07\x00\x00\x00\x00\x00"
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):received new subroutine from handler: Subroutine (netqasm_version=(0, 0), app_id=0):
 LN | HLN | CMD
   0    () set R0 10
   1    () array R0 @0
   2    () set R0 1
   3    () array R0 @1
   4    () set R0 0
   5    () set R1 0
   6    () store R0 @1[R1]
   7    () set R0 10
   8    () array R0 @2
   9    () set R0 1
  10    () array R0 @3
  11    () set R0 0
  12    () set R1 0
  13    () store R0 @3[R1]
  14    () set R0 0
  15    () set R1 0
  16    () set R2 1
  17    () set R3 0
  18    () recv_epr R0 R1 R2 R3
  19    () set R0 0
  20    () set R1 10
  21    () wait_all @0[R0:R1]
  22    () set Q0 1
  23    () qalloc Q0
  24    () init Q0
  25    () set Q0 0
  26    () set Q1 1
  27    () rot_y Q0 8 4
  28    () crot_y Q0 Q1 24 4
  29    () rot_x Q0 24 4
  30    () crot_x Q0 Q1 8 4
  31    () set Q0 0
  32    () qfree Q0
  33    () set R0 0
  34    () set R1 0
  35    () set R2 3
  36    () set R3 2
  37    () recv_epr R0 R1 R2 R3
  38    () set R0 0
  39    () set R1 10
  40    () wait_all @2[R0:R1]
  41    () breakpoint 2 0
  42    () set Q0 0
  43    () set Q1 1
  44    () rot_y Q1 8 4
  45    () crot_x Q0 Q1 8 4
  46    () rot_z Q0 24 4
  47    () rot_x Q1 24 4
  48    () rot_y Q1 24 4
  49    () ret_arr @0
  50    () ret_arr @1
  51    () ret_arr @2
  52    () ret_arr @3

DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction set R0 10 at line 0
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Set register R0 to 10
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction array R0 @0 at line 1
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Initializing an array of length 10 at address @0
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction set R0 1 at line 2
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Set register R0 to 1
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction array R0 @1 at line 3
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Initializing an array of length 1 at address @1
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction set R0 0 at line 4
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Set register R0 to 0
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction set R1 0 at line 5
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Set register R1 to 0
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction store R0 @1[R1] at line 6
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Storing value 0 from register R0 to array entry @1[R1]
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction set R0 10 at line 7
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Set register R0 to 10
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction array R0 @2 at line 8
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Initializing an array of length 10 at address @2
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction set R0 1 at line 9
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Set register R0 to 1
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction array R0 @3 at line 10
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Initializing an array of length 1 at address @3
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction set R0 0 at line 11
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Set register R0 to 0
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction set R1 0 at line 12
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Set register R1 to 0
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction store R0 @3[R1] at line 13
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Storing value 0 from register R0 to array entry @3[R1]
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction set R0 0 at line 14
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Set register R0 to 0
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction set R1 0 at line 15
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Set register R1 to 0
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction set R2 1 at line 16
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Set register R2 to 1
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction set R3 0 at line 17
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Set register R3 to 0
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction recv_epr R0 R1 R2 R3 at line 18
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Receiving EPR pair with remote node id 0 and EPR socket ID 0, using qubit addresses stored in array with address 1, placing the entanglement information in array at address 0
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction set R0 0 at line 19
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Set register R0 to 0
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction set R1 10 at line 20
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Set register R1 to 10
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction wait_all @0[R0:R1] at line 21
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Waiting for all entries in array slice @0[R0:R1] to become defined
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):checking if @0[0:10] has values for app ID 0
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):waiting for netstack to write to @0[0:10] for app ID 0
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):received new subroutine from handler: Subroutine (netqasm_version=(0, 0), app_id=0):
 LN | HLN | CMD
   0    () set R0 10
   1    () array R0 @0
   2    () set R0 1
   3    () array R0 @1
   4    () set R0 0
   5    () set R1 0
   6    () store R0 @1[R1]
   7    () set R0 20
   8    () array R0 @2
   9    () set R0 0
  10    () set R1 0
  11    () store R0 @2[R1]
  12    () set R0 1
  13    () set R1 1
  14    () store R0 @2[R1]
  15    () set R0 10
  16    () array R0 @3
  17    () set R0 1
  18    () array R0 @4
  19    () set R0 0
  20    () set R1 0
  21    () store R0 @4[R1]
  22    () set R0 20
  23    () array R0 @5
  24    () set R0 0
  25    () set R1 0
  26    () store R0 @5[R1]
  27    () set R0 1
  28    () set R1 1
  29    () store R0 @5[R1]
  30    () set R0 1
  31    () set R1 0
  32    () set R2 1
  33    () set R3 2
  34    () set R4 0
  35    () create_epr R0 R1 R2 R3 R4
  36    () set R0 0
  37    () set R1 10
  38    () wait_all @0[R0:R1]
  39    () set Q0 0
  40    () rot_y Q0 8 4
  41    () rot_x Q0 16 4
  42    () set Q0 0
  43    () meas Q0 M0
  44    () qfree Q0
  45    () set R0 1
  46    () set R1 0
  47    () set R2 4
  48    () set R3 5
  49    () set R4 3
  50    () create_epr R0 R1 R2 R3 R4
  51    () set R0 0
  52    () set R1 10
  53    () wait_all @3[R0:R1]
  54    () set Q0 0
  55    () meas Q0 M1
  56    () qfree Q0
  57    () breakpoint 2 1
  58    () ret_arr @0
  59    () ret_arr @1
  60    () ret_arr @2
  61    () ret_arr @3
  62    () ret_arr @4
  63    () ret_arr @5
  64    () ret_reg M0
  65    () ret_reg M1

DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R0 10 at line 0
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R0 to 10
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction array R0 @0 at line 1
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Initializing an array of length 10 at address @0
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R0 1 at line 2
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R0 to 1
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction array R0 @1 at line 3
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Initializing an array of length 1 at address @1
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R0 0 at line 4
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R0 to 0
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R1 0 at line 5
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R1 to 0
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction store R0 @1[R1] at line 6
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Storing value 0 from register R0 to array entry @1[R1]
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R0 20 at line 7
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R0 to 20
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction array R0 @2 at line 8
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Initializing an array of length 20 at address @2
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R0 0 at line 9
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R0 to 0
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R1 0 at line 10
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R1 to 0
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction store R0 @2[R1] at line 11
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Storing value 0 from register R0 to array entry @2[R1]
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R0 1 at line 12
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R0 to 1
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R1 1 at line 13
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R1 to 1
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction store R0 @2[R1] at line 14
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Storing value 1 from register R0 to array entry @2[R1]
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R0 10 at line 15
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R0 to 10
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction array R0 @3 at line 16
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Initializing an array of length 10 at address @3
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R0 1 at line 17
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R0 to 1
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction array R0 @4 at line 18
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Initializing an array of length 1 at address @4
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R0 0 at line 19
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R0 to 0
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R1 0 at line 20
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R1 to 0
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction store R0 @4[R1] at line 21
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Storing value 0 from register R0 to array entry @4[R1]
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R0 20 at line 22
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R0 to 20
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction array R0 @5 at line 23
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Initializing an array of length 20 at address @5
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R0 0 at line 24
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R0 to 0
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R1 0 at line 25
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R1 to 0
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction store R0 @5[R1] at line 26
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Storing value 0 from register R0 to array entry @5[R1]
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R0 1 at line 27
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R0 to 1
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R1 1 at line 28
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R1 to 1
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction store R0 @5[R1] at line 29
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Storing value 1 from register R0 to array entry @5[R1]
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R0 1 at line 30
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R0 to 1
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R1 0 at line 31
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R1 to 0
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R2 1 at line 32
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R2 to 1
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R3 2 at line 33
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R3 to 2
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R4 0 at line 34
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R4 to 0
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction create_epr R0 R1 R2 R3 R4 at line 35
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Creating EPR pair with remote node id 1 and EPR socket ID 0, using qubit addresses stored in array with address 1, using arguments stored in array with address 2, placing the entanglement information in array at address 0
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R0 0 at line 36
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R0 to 0
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set R1 10 at line 37
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register R1 to 10
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction wait_all @0[R0:R1] at line 38
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Waiting for all entries in array slice @0[R0:R1] to become defined
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):checking if @0[0:10] has values for app ID 0
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):waiting for netstack to write to @0[0:10] for app ID 0
DEBUG:300000.0 ns:Stack.Netstack(server_netstack):received new msg from processor: NetstackReceiveRequest(app_id=0, remote_node_id=0, epr_socket_id=0, qubit_array_addr=1, result_array_addr=0)
DEBUG:300000.0 ns:Stack.Netstack(client_netstack):received new msg from processor: NetstackCreateRequest(app_id=0, remote_node_id=1, epr_socket_id=0, qubit_array_addr=1, arg_array_addr=2, result_array_addr=0)
DEBUG:300000.0 ns:Stack.Netstack(server_netstack):received ReqCreateAndKeep(remote_node_id=1, minimum_fidelity=0.99, time_unit=0, max_time=0, purpose_id=0, number=1, priority=0, atomic=False, consecutive=False) from peer
DEBUG:300000.0 ns:Stack.Netstack(server_netstack):sending 'ready' to peer
INFO:300000.0 ns:Stack.Netstack(server_netstack):putting CK request to EGP for 1 pairs
INFO:300000.0 ns:Stack.Netstack(server_netstack):splitting request into 1 1-pair requests
INFO:300000.0 ns:Stack.Netstack(server_netstack):trying to allocate comm qubit for pair 0
INFO:300000.0 ns:Stack.Netstack(server_netstack):putting CK request for pair 0
INFO:300000.0 ns:Stack.Netstack(server_netstack):waiting for result for pair 0
DEBUG:300000.0 ns:Stack.Netstack(client_netstack):received peer msg: ready
INFO:300000.0 ns:Stack.Netstack(client_netstack):putting CK request to EGP for 1 pairs
INFO:300000.0 ns:Stack.Netstack(client_netstack):splitting request into 1 1-pair requests
INFO:300000.0 ns:Stack.Netstack(client_netstack):trying to allocate comm qubit for pair 0
INFO:300000.0 ns:Stack.Netstack(client_netstack):putting CK request for pair 0
INFO:300000.0 ns:Stack.Netstack(client_netstack):waiting for result for pair 0
INFO:300000.0 ns:Stack.Netstack(client_netstack):got result for pair 0: ResCreateAndKeep(create_id=0, directionality_flag=0, sequence_number=0, purpose_id=0, remote_node_id=1, goodness=0.99, bell_state=<BellIndex.B00: 0>, logical_qubit_id=0, time_of_goodness=300000.0)
INFO:300000.0 ns:Stack.Netstack(client_netstack):mapping virtual qubit 0 to physical qubit 0
DEBUG:300000.0 ns:Stack.Netstack(client_netstack):wrote to @0[0:10] for app ID 0
DEBUG:300000.0 ns:Stack.Netstack(client_netstack):create request done
INFO:300000.0 ns:Stack.Netstack(server_netstack):got result for pair 0: ResCreateAndKeep(create_id=0, directionality_flag=1, sequence_number=0, purpose_id=0, remote_node_id=0, goodness=0.99, bell_state=<BellIndex.B00: 0>, logical_qubit_id=0, time_of_goodness=300000.0)
INFO:300000.0 ns:Stack.Netstack(server_netstack):mapping virtual qubit 0 to physical qubit 0
DEBUG:300000.0 ns:Stack.Netstack(server_netstack):wrote to @0[0:10] for app ID 0
DEBUG:300000.0 ns:Stack.Netstack(server_netstack):receive request done
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):netstack wrote something
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):all entries were written
INFO:300000.0 ns:Stack.NVProcessor(client_processor):
Finished waiting for array slice @0[R0:R1]
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction set Q0 0 at line 39
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Set register Q0 to 0
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):300000.0 interpreting instruction rot_y Q0 8 4 at line 40
DEBUG:300000.0 ns:Stack.NVProcessor(client_processor):Performing rot_y Q0 8 4 with angle 1.5707963267948966 on virtual qubit 0 (physical ID: 0)
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):netstack wrote something
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):all entries were written
INFO:300000.0 ns:Stack.NVProcessor(server_processor):
Finished waiting for array slice @0[R0:R1]
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction set Q0 1 at line 22
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Set register Q0 to 1
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction qalloc Q0 at line 23
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Allocating qubit with virtual ID 1
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):300000.0 interpreting instruction init Q0 at line 24
DEBUG:300000.0 ns:Stack.NVProcessor(server_processor):Performing init Q0 on virtual qubit 1 (physical ID: 1)
DEBUG:300005.0 ns:Stack.NVProcessor(client_processor):300005.0 interpreting instruction rot_x Q0 16 4 at line 41
DEBUG:300005.0 ns:Stack.NVProcessor(client_processor):Performing rot_x Q0 16 4 with angle 3.141592653589793 on virtual qubit 0 (physical ID: 0)
DEBUG:300010.0 ns:Stack.NVProcessor(client_processor):300010.0 interpreting instruction set Q0 0 at line 42
DEBUG:300010.0 ns:Stack.NVProcessor(client_processor):Set register Q0 to 0
DEBUG:300010.0 ns:Stack.NVProcessor(client_processor):300010.0 interpreting instruction meas Q0 M0 at line 43
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):Measuring qubit 0 (physical ID: 0), placing the outcome in register M0
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):303710.0 interpreting instruction qfree Q0 at line 44
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):Freeing virtual qubit 0
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):303710.0 interpreting instruction set R0 1 at line 45
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):Set register R0 to 1
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):303710.0 interpreting instruction set R1 0 at line 46
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):Set register R1 to 0
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):303710.0 interpreting instruction set R2 4 at line 47
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):Set register R2 to 4
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):303710.0 interpreting instruction set R3 5 at line 48
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):Set register R3 to 5
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):303710.0 interpreting instruction set R4 3 at line 49
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):Set register R4 to 3
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):303710.0 interpreting instruction create_epr R0 R1 R2 R3 R4 at line 50
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):Creating EPR pair with remote node id 1 and EPR socket ID 0, using qubit addresses stored in array with address 4, using arguments stored in array with address 5, placing the entanglement information in array at address 3
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):303710.0 interpreting instruction set R0 0 at line 51
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):Set register R0 to 0
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):303710.0 interpreting instruction set R1 10 at line 52
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):Set register R1 to 10
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):303710.0 interpreting instruction wait_all @3[R0:R1] at line 53
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):Waiting for all entries in array slice @3[R0:R1] to become defined
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):checking if @3[0:10] has values for app ID 0
DEBUG:303710.0 ns:Stack.NVProcessor(client_processor):waiting for netstack to write to @3[0:10] for app ID 0
DEBUG:303710.0 ns:Stack.Netstack(client_netstack):received new msg from processor: NetstackCreateRequest(app_id=0, remote_node_id=1, epr_socket_id=0, qubit_array_addr=4, arg_array_addr=5, result_array_addr=3)
DEBUG:610000.0 ns:Stack.NVProcessor(server_processor):610000.0 interpreting instruction set Q0 0 at line 25
DEBUG:610000.0 ns:Stack.NVProcessor(server_processor):Set register Q0 to 0
DEBUG:610000.0 ns:Stack.NVProcessor(server_processor):610000.0 interpreting instruction set Q1 1 at line 26
DEBUG:610000.0 ns:Stack.NVProcessor(server_processor):Set register Q1 to 1
DEBUG:610000.0 ns:Stack.NVProcessor(server_processor):610000.0 interpreting instruction rot_y Q0 8 4 at line 27
DEBUG:610000.0 ns:Stack.NVProcessor(server_processor):Performing rot_y Q0 8 4 with angle 1.5707963267948966 on virtual qubit 0 (physical ID: 0)
DEBUG:610005.0 ns:Stack.NVProcessor(server_processor):610005.0 interpreting instruction crot_y Q0 Q1 24 4 at line 28
DEBUG:610005.0 ns:Stack.NVProcessor(server_processor):Performing crot_y Q0 Q1 24 4 with angle 4.71238898038469 on virtual qubits 0 and 1 (physical IDs: 0 and 1)
DEBUG:1110005.0 ns:Stack.NVProcessor(server_processor):1110005.0 interpreting instruction rot_x Q0 24 4 at line 29
DEBUG:1110005.0 ns:Stack.NVProcessor(server_processor):Performing rot_x Q0 24 4 with angle 4.71238898038469 on virtual qubit 0 (physical ID: 0)
DEBUG:1110010.0 ns:Stack.NVProcessor(server_processor):1110010.0 interpreting instruction crot_x Q0 Q1 8 4 at line 30
DEBUG:1110010.0 ns:Stack.NVProcessor(server_processor):Performing crot_x Q0 Q1 8 4 with angle 1.5707963267948966 on virtual qubits 0 and 1 (physical IDs: 0 and 1)
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):1610010.0 interpreting instruction set Q0 0 at line 31
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):Set register Q0 to 0
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):1610010.0 interpreting instruction qfree Q0 at line 32
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):Freeing virtual qubit 0
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):1610010.0 interpreting instruction set R0 0 at line 33
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):Set register R0 to 0
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):1610010.0 interpreting instruction set R1 0 at line 34
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):Set register R1 to 0
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):1610010.0 interpreting instruction set R2 3 at line 35
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):Set register R2 to 3
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):1610010.0 interpreting instruction set R3 2 at line 36
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):Set register R3 to 2
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):1610010.0 interpreting instruction recv_epr R0 R1 R2 R3 at line 37
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):Receiving EPR pair with remote node id 0 and EPR socket ID 0, using qubit addresses stored in array with address 3, placing the entanglement information in array at address 2
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):1610010.0 interpreting instruction set R0 0 at line 38
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):Set register R0 to 0
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):1610010.0 interpreting instruction set R1 10 at line 39
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):Set register R1 to 10
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):1610010.0 interpreting instruction wait_all @2[R0:R1] at line 40
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):Waiting for all entries in array slice @2[R0:R1] to become defined
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):checking if @2[0:10] has values for app ID 0
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):waiting for netstack to write to @2[0:10] for app ID 0
DEBUG:1610010.0 ns:Stack.Netstack(server_netstack):received new msg from processor: NetstackReceiveRequest(app_id=0, remote_node_id=0, epr_socket_id=0, qubit_array_addr=3, result_array_addr=2)
DEBUG:1610010.0 ns:Stack.Netstack(server_netstack):received ReqCreateAndKeep(remote_node_id=1, minimum_fidelity=0.99, time_unit=0, max_time=0, purpose_id=0, number=1, priority=0, atomic=False, consecutive=False) from peer
DEBUG:1610010.0 ns:Stack.Netstack(server_netstack):sending 'ready' to peer
INFO:1610010.0 ns:Stack.Netstack(server_netstack):putting CK request to EGP for 1 pairs
INFO:1610010.0 ns:Stack.Netstack(server_netstack):splitting request into 1 1-pair requests
INFO:1610010.0 ns:Stack.Netstack(server_netstack):trying to allocate comm qubit for pair 0
INFO:1610010.0 ns:Stack.Netstack(server_netstack):putting CK request for pair 0
INFO:1610010.0 ns:Stack.Netstack(server_netstack):waiting for result for pair 0
DEBUG:1610010.0 ns:Stack.Netstack(client_netstack):received peer msg: ready
INFO:1610010.0 ns:Stack.Netstack(client_netstack):putting CK request to EGP for 1 pairs
INFO:1610010.0 ns:Stack.Netstack(client_netstack):splitting request into 1 1-pair requests
INFO:1610010.0 ns:Stack.Netstack(client_netstack):trying to allocate comm qubit for pair 0
INFO:1610010.0 ns:Stack.Netstack(client_netstack):putting CK request for pair 0
INFO:1610010.0 ns:Stack.Netstack(client_netstack):waiting for result for pair 0
INFO:1610010.0 ns:Stack.Netstack(client_netstack):got result for pair 0: ResCreateAndKeep(create_id=1, directionality_flag=0, sequence_number=1, purpose_id=0, remote_node_id=1, goodness=0.99, bell_state=<BellIndex.B00: 0>, logical_qubit_id=0, time_of_goodness=1610010.0)
INFO:1610010.0 ns:Stack.Netstack(client_netstack):mapping virtual qubit 0 to physical qubit 0
DEBUG:1610010.0 ns:Stack.Netstack(client_netstack):wrote to @3[0:10] for app ID 0
DEBUG:1610010.0 ns:Stack.Netstack(client_netstack):create request done
INFO:1610010.0 ns:Stack.Netstack(server_netstack):got result for pair 0: ResCreateAndKeep(create_id=1, directionality_flag=1, sequence_number=1, purpose_id=0, remote_node_id=0, goodness=0.99, bell_state=<BellIndex.B00: 0>, logical_qubit_id=0, time_of_goodness=1610010.0)
INFO:1610010.0 ns:Stack.Netstack(server_netstack):mapping virtual qubit 0 to physical qubit 0
DEBUG:1610010.0 ns:Stack.Netstack(server_netstack):wrote to @2[0:10] for app ID 0
DEBUG:1610010.0 ns:Stack.Netstack(server_netstack):receive request done
DEBUG:1610010.0 ns:Stack.NVProcessor(client_processor):netstack wrote something
DEBUG:1610010.0 ns:Stack.NVProcessor(client_processor):all entries were written
INFO:1610010.0 ns:Stack.NVProcessor(client_processor):
Finished waiting for array slice @3[R0:R1]
DEBUG:1610010.0 ns:Stack.NVProcessor(client_processor):1610010.0 interpreting instruction set Q0 0 at line 54
DEBUG:1610010.0 ns:Stack.NVProcessor(client_processor):Set register Q0 to 0
DEBUG:1610010.0 ns:Stack.NVProcessor(client_processor):1610010.0 interpreting instruction meas Q0 M1 at line 55
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):netstack wrote something
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):all entries were written
INFO:1610010.0 ns:Stack.NVProcessor(server_processor):
Finished waiting for array slice @2[R0:R1]
DEBUG:1610010.0 ns:Stack.NVProcessor(server_processor):1610010.0 interpreting instruction breakpoint 2 0 at line 41
INFO:1610010.0 ns:Stack.NVProcessor(server_processor):BREAKPOINT: dumping global state:
DEBUG:1610010.0 ns:Stack.Netstack(server_netstack):received new msg from processor: NetstackBreakpointCreateRequest(app_id=0)
DEBUG:1613710.0 ns:Stack.NVProcessor(client_processor):Measuring qubit 0 (physical ID: 0), placing the outcome in register M1
DEBUG:1613710.0 ns:Stack.NVProcessor(client_processor):1613710.0 interpreting instruction qfree Q0 at line 56
DEBUG:1613710.0 ns:Stack.NVProcessor(client_processor):Freeing virtual qubit 0
DEBUG:1613710.0 ns:Stack.NVProcessor(client_processor):1613710.0 interpreting instruction breakpoint 2 1 at line 57
INFO:1613710.0 ns:Stack.NVProcessor(client_processor):BREAKPOINT: dumping global state:
DEBUG:1613710.0 ns:Stack.Netstack(client_netstack):received new msg from processor: NetstackBreakpointReceiveRequest(app_id=0)
INFO:1613710.0 ns:Stack.NVProcessor(server_processor):{'client': {}, 'server': {0: Qubit('QS#4-0'), 1: Qubit('QS#2-0')}}
DEBUG:1613710.0 ns:Stack.Netstack(client_netstack):breakpoint receive request done
DEBUG:1613710.0 ns:Stack.Netstack(server_netstack):breakpoint create request done
DEBUG:1613710.0 ns:Stack.NVProcessor(client_processor):1613710.0 interpreting instruction ret_arr @0 at line 58
DEBUG:1613710.0 ns:Stack.NVProcessor(client_processor):1613710.0 interpreting instruction ret_arr @1 at line 59
DEBUG:1613710.0 ns:Stack.NVProcessor(client_processor):1613710.0 interpreting instruction ret_arr @2 at line 60
DEBUG:1613710.0 ns:Stack.NVProcessor(client_processor):1613710.0 interpreting instruction ret_arr @3 at line 61
DEBUG:1613710.0 ns:Stack.NVProcessor(client_processor):1613710.0 interpreting instruction ret_arr @4 at line 62
DEBUG:1613710.0 ns:Stack.NVProcessor(client_processor):1613710.0 interpreting instruction ret_arr @5 at line 63
DEBUG:1613710.0 ns:Stack.NVProcessor(client_processor):1613710.0 interpreting instruction ret_reg M0 at line 64
DEBUG:1613710.0 ns:Stack.NVProcessor(client_processor):1613710.0 interpreting instruction ret_reg M1 at line 65
DEBUG:1613710.0 ns:Stack.NVProcessor(server_processor):1613710.0 interpreting instruction set Q0 0 at line 42
DEBUG:1613710.0 ns:Stack.NVProcessor(server_processor):Set register Q0 to 0
DEBUG:1613710.0 ns:Stack.NVProcessor(server_processor):1613710.0 interpreting instruction set Q1 1 at line 43
DEBUG:1613710.0 ns:Stack.NVProcessor(server_processor):Set register Q1 to 1
DEBUG:1613710.0 ns:Stack.NVProcessor(server_processor):1613710.0 interpreting instruction rot_y Q1 8 4 at line 44
DEBUG:1613710.0 ns:Stack.NVProcessor(server_processor):Performing rot_y Q1 8 4 with angle 1.5707963267948966 on virtual qubit 1 (physical ID: 1)
DEBUG:1613710.0 ns:Stack.Handler(client_handler):result: subroutine done
DEBUG:2113710.0 ns:Stack.NVProcessor(server_processor):2113710.0 interpreting instruction crot_x Q0 Q1 8 4 at line 45
DEBUG:2113710.0 ns:Stack.NVProcessor(server_processor):Performing crot_x Q0 Q1 8 4 with angle 1.5707963267948966 on virtual qubits 0 and 1 (physical IDs: 0 and 1)
DEBUG:2613710.0 ns:Stack.NVProcessor(server_processor):2613710.0 interpreting instruction rot_z Q0 24 4 at line 46
DEBUG:2613710.0 ns:Stack.NVProcessor(server_processor):Performing rot_z Q0 24 4 with angle 4.71238898038469 on virtual qubit 0 (physical ID: 0)
DEBUG:2613715.0 ns:Stack.NVProcessor(server_processor):2613715.0 interpreting instruction rot_x Q1 24 4 at line 47
DEBUG:2613715.0 ns:Stack.NVProcessor(server_processor):Performing rot_x Q1 24 4 with angle 4.71238898038469 on virtual qubit 1 (physical ID: 1)
DEBUG:3113715.0 ns:Stack.NVProcessor(server_processor):3113715.0 interpreting instruction rot_y Q1 24 4 at line 48
DEBUG:3113715.0 ns:Stack.NVProcessor(server_processor):Performing rot_y Q1 24 4 with angle 4.71238898038469 on virtual qubit 1 (physical ID: 1)
DEBUG:3613715.0 ns:Stack.NVProcessor(server_processor):3613715.0 interpreting instruction ret_arr @0 at line 49
DEBUG:3613715.0 ns:Stack.NVProcessor(server_processor):3613715.0 interpreting instruction ret_arr @1 at line 50
DEBUG:3613715.0 ns:Stack.NVProcessor(server_processor):3613715.0 interpreting instruction ret_arr @2 at line 51
DEBUG:3613715.0 ns:Stack.NVProcessor(server_processor):3613715.0 interpreting instruction ret_arr @3 at line 52
DEBUG:3613715.0 ns:Stack.Handler(server_handler):result: subroutine done
INFO:3613715.0 ns:Stack.QnosConnection(server_program):Flushing presubroutine:
PreSubroutine (netqasm_version=(0, 0), app_id=0):
 LN | HLN | CMD
   0    () set Q0 0
   1    () rot_z Q0 1 0
   2    () set Q0 0
   3    () h Q0
   4    () set Q0 0
   5    () meas Q0 M0
   6    () qfree Q0
   7    () ret_reg M0

INFO:3613715.0 ns:Stack.QnosConnection(server_program):Flushing compiled subroutine:
Subroutine (netqasm_version=(0, 0), app_id=0):
 LN | HLN | CMD
   0    () set Q0 0
   1    () rot_z Q0 1 0
   2    () set Q0 0
   3    () rot_y Q0 8 4
   4    () rot_x Q0 16 4
   5    () set Q0 0
   6    () meas Q0 M0
   7    () qfree Q0
   8    () ret_reg M0

DEBUG:3613715.0 ns:Stack.QnosConnection(server_program):Committing message <netqasm.backend.messages.SubroutineMessage object at 0x7fc091b1b400>
DEBUG:3713715.0 ns:Stack.Handler(server_handler):received new msg from host: b"\x02\x00\x00\x00\x00\x04\x02\x00\x00\x00\x00\x00\x1d\x02\x01\x00\x00\x00\x00\x04\x02\x00\x00\x00\x00\x00\x1c\x02\x08\x04\x00\x00\x00\x1b\x02\x10\x04\x00\x00\x00\x04\x02\x00\x00\x00\x00\x00 \x02\x03\x00\x00\x00\x00&\x02\x00\x00\x00\x00\x00'\x03\x00\x00\x00\x00\x00"
DEBUG:3713715.0 ns:Stack.NVProcessor(server_processor):received new subroutine from handler: Subroutine (netqasm_version=(0, 0), app_id=0):
 LN | HLN | CMD
   0    () set Q0 0
   1    () rot_z Q0 1 0
   2    () set Q0 0
   3    () rot_y Q0 8 4
   4    () rot_x Q0 16 4
   5    () set Q0 0
   6    () meas Q0 M0
   7    () qfree Q0
   8    () ret_reg M0

DEBUG:3713715.0 ns:Stack.NVProcessor(server_processor):3713715.0 interpreting instruction set Q0 0 at line 0
DEBUG:3713715.0 ns:Stack.NVProcessor(server_processor):Set register Q0 to 0
DEBUG:3713715.0 ns:Stack.NVProcessor(server_processor):3713715.0 interpreting instruction rot_z Q0 1 0 at line 1
DEBUG:3713715.0 ns:Stack.NVProcessor(server_processor):Performing rot_z Q0 1 0 with angle 3.141592653589793 on virtual qubit 0 (physical ID: 0)
DEBUG:3713720.0 ns:Stack.NVProcessor(server_processor):3713720.0 interpreting instruction set Q0 0 at line 2
DEBUG:3713720.0 ns:Stack.NVProcessor(server_processor):Set register Q0 to 0
DEBUG:3713720.0 ns:Stack.NVProcessor(server_processor):3713720.0 interpreting instruction rot_y Q0 8 4 at line 3
DEBUG:3713720.0 ns:Stack.NVProcessor(server_processor):Performing rot_y Q0 8 4 with angle 1.5707963267948966 on virtual qubit 0 (physical ID: 0)
DEBUG:3713725.0 ns:Stack.NVProcessor(server_processor):3713725.0 interpreting instruction rot_x Q0 16 4 at line 4
DEBUG:3713725.0 ns:Stack.NVProcessor(server_processor):Performing rot_x Q0 16 4 with angle 3.141592653589793 on virtual qubit 0 (physical ID: 0)
DEBUG:3713730.0 ns:Stack.NVProcessor(server_processor):3713730.0 interpreting instruction set Q0 0 at line 5
DEBUG:3713730.0 ns:Stack.NVProcessor(server_processor):Set register Q0 to 0
DEBUG:3713730.0 ns:Stack.NVProcessor(server_processor):3713730.0 interpreting instruction meas Q0 M0 at line 6
DEBUG:3717430.0 ns:Stack.NVProcessor(server_processor):Measuring qubit 0 (physical ID: 0), placing the outcome in register M0
DEBUG:3717430.0 ns:Stack.NVProcessor(server_processor):3717430.0 interpreting instruction qfree Q0 at line 7
DEBUG:3717430.0 ns:Stack.NVProcessor(server_processor):Freeing virtual qubit 0
DEBUG:3717430.0 ns:Stack.NVProcessor(server_processor):3717430.0 interpreting instruction ret_reg M0 at line 8
DEBUG:3717430.0 ns:Stack.Handler(server_handler):result: subroutine done
INFO:3717430.0 ns:Stack.QnosConnection(server_program):Flushing presubroutine:
PreSubroutine (netqasm_version=(0, 0), app_id=0):
 LN | HLN | CMD
   0    () set Q0 1
   1    () h Q0
   2    () set Q0 1
   3    () meas Q0 M0
   4    () qfree Q0
   5    () ret_reg M0

INFO:3717430.0 ns:Stack.QnosConnection(server_program):Flushing compiled subroutine:
Subroutine (netqasm_version=(0, 0), app_id=0):
 LN | HLN | CMD
   0    () set Q0 1
   1    () rot_y Q0 8 4
   2    () rot_x Q0 16 4
   3    () set Q0 1
   4    () meas Q0 M0
   5    () qfree Q0
   6    () ret_reg M0

DEBUG:3717430.0 ns:Stack.QnosConnection(server_program):Committing message <netqasm.backend.messages.SubroutineMessage object at 0x7fc091ad8f10>
DEBUG:3817430.0 ns:Stack.Handler(server_handler):received new msg from host: b"\x02\x00\x00\x00\x00\x04\x02\x01\x00\x00\x00\x00\x1c\x02\x08\x04\x00\x00\x00\x1b\x02\x10\x04\x00\x00\x00\x04\x02\x01\x00\x00\x00\x00 \x02\x03\x00\x00\x00\x00&\x02\x00\x00\x00\x00\x00'\x03\x00\x00\x00\x00\x00"
DEBUG:3817430.0 ns:Stack.Handler(client_handler):received new msg from host: b'\x03\x00\x00\x00\x00\x00\x00\x00'
DEBUG:3817430.0 ns:Stack.Handler(client_handler):stopping application with ID 0
DEBUG:3817430.0 ns:Stack.Handler(client_handler):clearing qubits for application with ID 0
DEBUG:3817430.0 ns:Stack.NVProcessor(server_processor):received new subroutine from handler: Subroutine (netqasm_version=(0, 0), app_id=0):
 LN | HLN | CMD
   0    () set Q0 1
   1    () rot_y Q0 8 4
   2    () rot_x Q0 16 4
   3    () set Q0 1
   4    () meas Q0 M0
   5    () qfree Q0
   6    () ret_reg M0

DEBUG:3817430.0 ns:Stack.NVProcessor(server_processor):3817430.0 interpreting instruction set Q0 1 at line 0
DEBUG:3817430.0 ns:Stack.NVProcessor(server_processor):Set register Q0 to 1
DEBUG:3817430.0 ns:Stack.NVProcessor(server_processor):3817430.0 interpreting instruction rot_y Q0 8 4 at line 1
DEBUG:3817430.0 ns:Stack.NVProcessor(server_processor):Performing rot_y Q0 8 4 with angle 1.5707963267948966 on virtual qubit 1 (physical ID: 1)
DEBUG:4317430.0 ns:Stack.NVProcessor(server_processor):4317430.0 interpreting instruction rot_x Q0 16 4 at line 2
DEBUG:4317430.0 ns:Stack.NVProcessor(server_processor):Performing rot_x Q0 16 4 with angle 3.141592653589793 on virtual qubit 1 (physical ID: 1)
DEBUG:4817430.0 ns:Stack.NVProcessor(server_processor):4817430.0 interpreting instruction set Q0 1 at line 3
DEBUG:4817430.0 ns:Stack.NVProcessor(server_processor):Set register Q0 to 1
DEBUG:4817430.0 ns:Stack.NVProcessor(server_processor):4817430.0 interpreting instruction meas Q0 M0 at line 4
DEBUG:5823145.0 ns:Stack.NVProcessor(server_processor):Measuring qubit 1 (physical ID: 1), placing the outcome in register M0
DEBUG:5823145.0 ns:Stack.NVProcessor(server_processor):5823145.0 interpreting instruction qfree Q0 at line 5
DEBUG:5823145.0 ns:Stack.NVProcessor(server_processor):Freeing virtual qubit 1
DEBUG:5823145.0 ns:Stack.NVProcessor(server_processor):5823145.0 interpreting instruction ret_reg M0 at line 6
DEBUG:5823145.0 ns:Stack.Handler(server_handler):result: subroutine done
DEBUG:5923145.0 ns:Stack.Handler(server_handler):received new msg from host: b'\x03\x00\x00\x00\x00\x00\x00\x00'
DEBUG:5923145.0 ns:Stack.Handler(server_handler):stopping application with ID 0
DEBUG:5923145.0 ns:Stack.Handler(server_handler):clearing qubits for application with ID 0
